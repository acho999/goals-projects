<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <some.prop>hello</some.prop>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.surefire-plugin>2.22.2</maven.surefire-plugin>
        <maven.compiler-plugin>3.8.1</maven.compiler-plugin>
    </properties>

    <groupId>com.angel</groupId>
    <artifactId>Mvn_for_Spring_Boot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Mvn for Spring Boot</name>
    <description>Demo project for Spring Boot</description>

    <packaging>pom</packaging>

    <modules>
        <module>web-app</module>
        <module>web-model</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <!-- we can have plugin management here in parent projects-->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire-plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
    <!--  HERE we can add BOM and many things for this parent project
    <groupId>guru.springframework</groupId>
        <artifactId>mssc-brewery-bom</artifactId>
        <version>1.0-SNAPSHOT</version>

        <packaging>pom</packaging>

        <!-- Get those from effective pom -->
        <licenses>
            <license>
                <name>Apache License, Version 2.0</name>
                <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            </license>
        </licenses>

        <developers><!-- Get those from effective pom -->
            <developer>
                <name>Pivotal</name>
                <email>info@pivotal.io</email>
                <organization>Pivotal Software, Inc.</organization>
                <organizationUrl>https://www.spring.io</organizationUrl>
            </developer>
        </developers>

        <properties> <!-- here are dependencies versions-->
            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
            <java.version>11</java.version>
            <maven.compiler.source>${java.version}</maven.compiler.source>
            <maven.compiler.target>${java.version}</maven.compiler.target>
            <jaxb.api.version>2.3.0</jaxb.api.version>
        </properties>

        <!-- -->
        <!--Here we will define BOM -->
        <dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-core</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>
            </dependencies>
        </dependencyManagement>

        <!--Here we can define additional dependencies which are in all child projects -->
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <exclusions><!-- here we define dependencies which we want to exclude and to not use-->
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency><!-- Setting up H2 database-->
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
        <!-- -->
        <!-- Here we can define some common plugins-->
        <build>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <plugin><!--tha way we configure plugin to auto clean when it starts -->
                    <artifactId>maven-clean-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>auto-clean</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>
                                    clean
                                </goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin><!--tha way we configure plugin to enforce maven versions-->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>
                                    enforce
                                </goal>
                            </goals>
                            <configuration><!--here we can make configurations -->
                                <rules>
                                    <rule><!--we can create rules -->
                                        <requireMavenVersions>[3.6.0)</requireMavenVersions><!--version 3.6.0 or later that [fdsffs) means -->
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>

        <--this way we can ignore some dependency classes
        <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-enforcer-plugin</artifactId>
                  <executions>
                      <execution>
                          <id>enforce-ban-duplicate-classes</id>
                          <goals>
                              <goal>enforce</goal>
                          </goals>
                          <configuration>
                              <!-- TODO Start using enforcer when we can clean the dependency tree conflicts. -->
                              <skip>true</skip>
                              <rules>
                                  <banDuplicateClasses>
                                      <findAllDuplicates>true</findAllDuplicates>
                                      <!-- omit system and provided scopes -->
                                      <scopes>
                                          <scope>compile</scope>
                                          <scope>test</scope>
                                          <scope>runtime</scope>
                                      </scopes>
                                      <ignoreClasses>
                                          <!-- Ignore duplication of asm lib due to poor 'vendoring' practices -->
                                          <ignoreClass>org.objectweb.asm.*</ignoreClass>


                                          <!-- Ignore commons-logging duplication in core.cache.common:
                                          Found in:
                                          org.slf4j:jcl-over-slf4j:jar:1.7.13:provided
                                          commons-logging:commons-logging:jar:1.2:compile
                                          -->
                                          <ignoreClass>org.apache.commons.logging.*</ignoreClass>

                                          <!--
                                          We are including both org.aspectj:aspectjweaver:jar:1.8.9:compile
                                          and org.aspectj:aspectjrt:jar:1.8.9:runtime that have
                                          duplicate classes as part of Springboot/Springboard
                                          -->
                                          <ignoreClass>org.aspectj.*</ignoreClass>
                                          <ignoreClass>org.zalando.logbook.*</ignoreClass>
                                      </ignoreClasses>
                                  </banDuplicateClasses>
                              </rules>
                              <fail>true</fail>
                          </configuration>
                      </execution>
                  </executions>
              </plugin> -->
      -->
