{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel.zahariev\\\\Documents\\\\projects\\\\myreactapp\\\\src\\\\components\\\\StateForComponentExample.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StateForComponentExample extends Component {\n  // за да пазим стейт на компонент \n  //ни трябва конструктор който винаги получава props и стейта е винаги\n  //обект също така тряябва да викаме parent constructor-a стейта се променя със setState() функция\n  // можем да this.state да присвояваме стойност само в конструктора навсякъде другаде е със setState()\n  // правим callback функция за бутона в която ще модифицираме стейта.Стейта се модифицира чрез свойството prevState \n  //което пази предходния стейт. С this.increment.bind(this) байндваме this на компонента за да може вътрешното this \n  //във функцията да сочи към контекста на класа а не към контекста на бутона другия начин рътрешното this  да сочи \n  // към контекста на класа е със arrow фукция increment = () => {this.setState()}...\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0\n    };\n  }\n\n  increment() {\n    this.setState(prevState => {\n      return {\n        counter: ++prevState.counter\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u0421\\u0442\\u0435\\u0439\\u0442\\u0430 \\u043D\\u0430 counter e \", this.state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment.bind(this),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default StateForComponentExample;","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/myreactapp/src/components/StateForComponentExample.js"],"names":["React","Component","StateForComponentExample","constructor","props","state","counter","increment","setState","prevState","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAGA,MAAMC,wBAAN,SAAuCD,SAAvC,CAAiD;AAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACH;;AAGDC,EAAAA,SAAS,GAAE;AAEP,SAAKC,QAAL,CAAeC,SAAD,IAAc;AACxB,aAAO;AAACH,QAAAA,OAAO,EAAE,EAAGG,SAAS,CAACH;AAAvB,OAAP;AACH,KAFD;AAIH;;AAEJI,EAAAA,MAAM,GAAE;AAEL,wBAEI;AAAA,8BACI;AAAA,mFAAyB,KAAKL,KAAL,CAAWC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAS,QAAA,OAAO,EAAE,KAAKC,SAAL,CAAeI,IAAf,CAAoB,IAApB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFJ;AAQF;;AAjC+C;;AAqCjD,eAAeT,wBAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nclass StateForComponentExample extends Component {// за да пазим стейт на компонент \r\n    //ни трябва конструктор който винаги получава props и стейта е винаги\r\n    //обект също така тряябва да викаме parent constructor-a стейта се променя със setState() функция\r\n    // можем да this.state да присвояваме стойност само в конструктора навсякъде другаде е със setState()\r\n    // правим callback функция за бутона в която ще модифицираме стейта.Стейта се модифицира чрез свойството prevState \r\n    //което пази предходния стейт. С this.increment.bind(this) байндваме this на компонента за да може вътрешното this \r\n    //във функцията да сочи към контекста на класа а не към контекста на бутона другия начин рътрешното this  да сочи \r\n    // към контекста на класа е със arrow фукция increment = () => {this.setState()}...\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { counter: 0 };\r\n    }\r\n\r\n\r\n    increment(){\r\n\r\n        this.setState((prevState) =>{\r\n            return {counter: ++ prevState.counter}\r\n        });\r\n\r\n    }\r\n\r\n render(){\r\n\r\n    return(\r\n\r\n        <> \r\n            <h1>Стейта на counter e {this.state.counter}</h1>\r\n            <button  onClick={this.increment.bind(this)} >Increment</button>\r\n        </>\r\n    )\r\n\r\n }\r\n\r\n}\r\n\r\nexport default StateForComponentExample"]},"metadata":{},"sourceType":"module"}