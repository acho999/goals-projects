{"ast":null,"code":"var _jsxFileName = \"/Users/v-angel.zahariev/Documents/projects/goals-projects/react/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  let [enteredValue, setEnteredValue] = useState('');\n  let [isValid, setIsValid] = useState(true); //we add this to check if have any value in input\n\n  const goalInputChangeHandler = event => {\n    if (enteredValue.trim().length > 0) {\n      //here we add check because if input is valid we do not need to color label\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      //here we add check\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue); //here we pass data to parent component\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: `form-control ${!isValid ? 'invalid' : ''}`,\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: `form-control ${!isValid ? 'invalid' : ''}`,\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"mIOqxu9FayRAZu4sNJrmNUPBTGI=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["/Users/v-angel.zahariev/Documents/projects/goals-projects/react/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","trim","length","target","value","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAI,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,IAAD,CAAnC,CAF2B,CAEe;;AAE1C,QAAMQ,sBAAsB,GAAGC,KAAK,IAAI;AACtC,QAAGL,YAAY,CAACM,IAAb,GAAoBC,MAApB,GAA6B,CAAhC,EAAkC;AAAC;AACjCJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,eAAe,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAf;AACD,GALD;;AAOA,QAAMC,iBAAiB,GAAGL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAGX,YAAY,CAACM,IAAb,GAAoBC,MAApB,KAA+B,CAAlC,EAAoC;AAAC;AACnCJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB,EANiC,CAMH;AAC/B,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,KAAK,EAAG,gBAAe,CAACR,OAAD,GAAW,SAAX,GAAuB,EAAG,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAO,QAAA,KAAK,EAAG,gBAAe,CAACA,OAAD,GAAW,SAAX,GAAuB,EAAG,EAAxD;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,QAAQ,EAAEE;AAAjF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMN,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\n\nconst CourseInput = props => {\n  let [enteredValue, setEnteredValue] = useState('');\n  let [isValid,setIsValid] = useState(true);//we add this to check if have any value in input\n\n  const goalInputChangeHandler = event => {\n    if(enteredValue.trim().length > 0){//here we add check because if input is valid we do not need to color label\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if(enteredValue.trim().length === 0){//here we add check\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);//here we pass data to parent component\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"form-control\">\n        <label style={`form-control ${!isValid ? 'invalid' : ''}`}>Course Goal</label>{/*here we add conditional color {{color:!isValid?'red':'black'}} if input isvalid,also we can add\n        just a simple class with these colors but not to add inline this colors and we can use this classess to many places without repeating the\n        all colors for example we can add invalid -> form-controll invalid and now we will add css stile for this class in css file \n        and will change the way we will add new dynamic style as {`form-controll ${!isValid ? \"invalid\" : \"\"}`} here in the \n        curly braces we add `` in which we can add string class name but we can add dynamically after $ in {} plain javascript code*/}\n        <input style={`form-control ${!isValid ? 'invalid' : ''}`} type=\"text\" onChange={goalInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}