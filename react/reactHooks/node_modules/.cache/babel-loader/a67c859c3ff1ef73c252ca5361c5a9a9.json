{"ast":null,"code":"var _jsxFileName = \"/Users/v-angel.zahariev/Documents/projects/goals-projects/react/reactHooks/hooks/src/components/Hooks.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './hooks.css';\nimport Card from './UI components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hooks(props) {\n  _s();\n\n  // components from function type can have state can have props but to add state we have to use hooks\n  //they can be used only for presentation with returning some html, but they can have state and can receive props\n  //here we have not extend React.Component\n  //here we have not this keyword we will be able to access component state without 'this'\n  //here we have not lifecycle methods\n  //it can be by two ways setTitle(()=>++title) or setTitle(++tistle)\n  //when state is set in title if component rerenders it will save its value\n  let [title, setTitle] = useState(props.title);\n\n  const handler = () => {\n    console.log('pesho');\n  }; //two ways for hadler arrow anonymous function\n\n\n  function handlerFunction() {\n    console.log('gosho');\n  } //we can use useState several times for handling diferrent state variables but we can use one useState and one\n  //variable in all inputs for example\n\n  /*\r\n      let [name,setName] = useState();\r\n        let [age,setAge] = useState();\r\n        const inputNameHandler = (event)=>{setName(event.target.value);}\r\n        const inputAgeHandler = (event)=>{setAge(event.target.value);}\r\n    */\n  //second variant\n\n\n  let [inputs, setInputs] = useState({\n    name: '',\n    age: ''\n  });\n\n  const inputNameHandler = event => {\n    setInputs(...inputs, name = event.target.value);\n  };\n\n  const inputAgeHandler = event => {\n    setInputs(...inputs, age = event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"hookcomponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hook Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handler,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setTitle(() => ++title);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerFunction,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: inputNameHandler,\n          placeholder: \"enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: inputAgeHandler,\n          type: \"number\",\n          placeholder: \"enter age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n} //functions could be written by this way\n\n\n_s(Hooks, \"eMV0lDLPDkKMCH74SsJrysv3rG8=\");\n\n_c = Hooks;\n\nconst App = props => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"hookcomponent\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hook Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = App;\nexport default Hooks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hooks\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/v-angel.zahariev/Documents/projects/goals-projects/react/reactHooks/hooks/src/components/Hooks.js"],"names":["React","useState","useEffect","Card","Hooks","props","title","setTitle","handler","console","log","handlerFunction","inputs","setInputs","name","age","inputNameHandler","event","target","value","inputAgeHandler","App"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AAEA,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAA/B;;AAEA,QAAME,OAAO,GAAG,MAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqB,GAA1C,CAViB,CAUyB;;;AAG1C,WAASC,eAAT,GAA0B;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqB,GAb/B,CAejB;AACA;;AACwB;AAC5B;AACA;AACA;AACA;AACA;AAOI;;;AAEA,MAAI,CAACE,MAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC;AAACa,IAAAA,IAAI,EAAC,EAAN;AAASC,IAAAA,GAAG,EAAC;AAAb,GAAD,CAAjC;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAS;AAACJ,IAAAA,SAAS,CAAC,GAAGD,MAAJ,EAAWE,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAA/B,CAAT;AAAgD,GAAnF;;AAEA,QAAMC,eAAe,GAAIH,KAAD,IAAS;AAACJ,IAAAA,SAAS,CAAC,GAAGD,MAAJ,EAAWG,GAAG,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAT;AAA+C,GAAjF;;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACD,QAAAA,QAAQ,CAAC,MAAI,EAAED,KAAP,CAAR;AAAsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAEK,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YARJ,eAUI;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEU,gBAA7B;AAA+C,UAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAEI,eAAjB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAgD,UAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAsBI;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,C,CAED;;;GAlESX,K;;KAAAA,K;;AAmET,MAAMiB,GAAG,GAAIhB,KAAD,IAAW;AACnB,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMgB,G;AAQN,eAAejB,KAAf","sourcesContent":["import {React,useState,useEffect }from 'react';\r\nimport './hooks.css';\r\nimport Card from './UI components/Card';\r\n\r\nfunction Hooks(props){// components from function type can have state can have props but to add state we have to use hooks\r\n    //they can be used only for presentation with returning some html, but they can have state and can receive props\r\n    //here we have not extend React.Component\r\n    //here we have not this keyword we will be able to access component state without 'this'\r\n    //here we have not lifecycle methods\r\n    //it can be by two ways setTitle(()=>++title) or setTitle(++tistle)\r\n    //when state is set in title if component rerenders it will save its value\r\n    \r\n    let [title,setTitle] = useState(props.title);\r\n\r\n    const handler = ()=>{console.log('pesho')}//two ways for hadler arrow anonymous function\r\n\r\n\r\n    function handlerFunction(){console.log('gosho')}\r\n\r\n    //we can use useState several times for handling diferrent state variables but we can use one useState and one\r\n    //variable in all inputs for example\r\n                            /*\r\n                                let [name,setName] = useState();\r\n\r\n                                let [age,setAge] = useState();\r\n\r\n                                const inputNameHandler = (event)=>{setName(event.target.value);}\r\n\r\n                                const inputAgeHandler = (event)=>{setAge(event.target.value);}\r\n\r\n                            */\r\n\r\n    \r\n    //second variant\r\n\r\n    let [inputs,setInputs] = useState({name:'',age:''});\r\n\r\n    const inputNameHandler = (event)=>{setInputs(...inputs,name = event.target.value);}\r\n\r\n    const inputAgeHandler = (event)=>{setInputs(...inputs,age = event.target.value);}\r\n\r\n    return(\r\n        <Card className='hookcomponent'>\r\n            <h2>Hook Component</h2>\r\n            <button onClick={handler}>Click</button>\r\n            <br/>\r\n            <button onClick={()=>{setTitle(()=>++title)}}>Click</button>\r\n            <br/>\r\n            <button onClick={handlerFunction}>Click</button>\r\n            <br/>\r\n            <h2>{title}</h2>\r\n\r\n            <form>\r\n                <div>\r\n                    <title>Name</title>\r\n                    <input type=\"text\" onChange={inputNameHandler} placeholder=\"enter name\"/>\r\n                </div>\r\n                <div>\r\n                    <title>age</title>\r\n                    <input onChange={inputAgeHandler} type=\"number\" placeholder=\"enter age\"/>\r\n                </div>\r\n                <button type=\"submit\" >Submit</button>\r\n            </form>\r\n\r\n            <div>{name}</div>\r\n            <div>{age}</div>\r\n        </Card>\r\n    )\r\n}\r\n\r\n//functions could be written by this way\r\nconst App = (props) => { \r\n    return(\r\n        <Card className='hookcomponent'>\r\n            <h2>Hook Component</h2>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Hooks"]},"metadata":{},"sourceType":"module"}