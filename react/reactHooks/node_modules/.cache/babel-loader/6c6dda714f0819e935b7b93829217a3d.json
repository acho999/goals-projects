{"ast":null,"code":"var _jsxFileName = \"/Users/v-angel.zahariev/Documents/projects/goals-projects/react/reactHooks/hooks/src/components/Hooks.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './hooks.css';\nimport Card from './UI components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hooks(props) {\n  _s();\n\n  // components from function type can have state can have props but to add state we have to use hooks\n  //they can be used only for presentation with returning some html, but they can have state and can receive props\n  //here we have not extend React.Component\n  //here we have not this keyword we will be able to access component state without 'this'\n  //here we have not lifecycle methods\n  let [title, setTitle] = useState(0);\n\n  function handlerFunction() {\n    console.log('gosho');\n  }\n\n  const handler = () => {\n    console.log('pesho');\n  }; //two ways for hadler arrow anonymous function\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"hookcomponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hook Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handler,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setTitle(() => ++title);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerFunction,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n} //functions could be written by this way\n\n\n_s(Hooks, \"cxp/A8LkLWbRAYq5r9djS9C5RXI=\");\n\n_c = Hooks;\n\nconst App = props => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"hookcomponent\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hook Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = App;\nexport default Hooks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hooks\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/v-angel.zahariev/Documents/projects/goals-projects/react/reactHooks/hooks/src/components/Hooks.js"],"names":["React","useState","useEffect","Card","Hooks","props","title","setTitle","handlerFunction","console","log","handler","App"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAAC;AAClB;AACA;AACA;AACA;AACA,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,CAAD,CAA/B;;AACA,WAASO,eAAT,GAA0B;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqB;;AAChD,QAAMC,OAAO,GAAG,MAAI;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqB,GAA1C,CAPiB,CAOyB;;;AAC1C,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACJ,QAAAA,QAAQ,CAAC,MAAI,EAAED,KAAP,CAAR;AAAsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,C,CAED;;;GArBSF,K;;KAAAA,K;;AAsBT,MAAMQ,GAAG,GAAIP,KAAD,IAAW;AACnB,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMO,G;AAQN,eAAeR,KAAf","sourcesContent":["import {React,useState,useEffect }from 'react';\r\nimport './hooks.css';\r\nimport Card from './UI components/Card';\r\n\r\nfunction Hooks(props){// components from function type can have state can have props but to add state we have to use hooks\r\n    //they can be used only for presentation with returning some html, but they can have state and can receive props\r\n    //here we have not extend React.Component\r\n    //here we have not this keyword we will be able to access component state without 'this'\r\n    //here we have not lifecycle methods\r\n    let [title,setTitle] = useState(0);\r\n    function handlerFunction(){console.log('gosho')}\r\n    const handler = ()=>{console.log('pesho')}//two ways for hadler arrow anonymous function\r\n    return(\r\n        <Card className='hookcomponent'>\r\n            <h2>Hook Component</h2>\r\n            <button onClick={handler}>Click</button>\r\n            <br/>\r\n            <button onClick={()=>{setTitle(()=>++title)}}>Click</button>\r\n            <button onClick={handlerFunction}>Click</button>\r\n            <br/>\r\n            <h2>{title}</h2>\r\n        </Card>\r\n    )\r\n}\r\n\r\n//functions could be written by this way\r\nconst App = (props) => { \r\n    return(\r\n        <Card className='hookcomponent'>\r\n            <h2>Hook Component</h2>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Hooks"]},"metadata":{},"sourceType":"module"}