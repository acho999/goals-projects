{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel.zahariev\\\\Documents\\\\projects\\\\lottery\\\\lottery\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Lottery, Final, About } from './helper/imports';\nimport { getRandomNumber } from './helper/utills';\nimport { registerTickets, removeTicket, checkTicket, reset } from './helper/actions';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; //this way we add router routes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n  //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n  //които ще приемат някакви параметри\n  //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n  // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n  constructor(props) {\n    //from state in constructor all our components are dependant \n    //and all components are reactive because of this state \n    //it is a parent component state and all components depend on it\n    //is state is changed then all components are noticed and they will be updated\n    //FOR ROUTING WE HAVE TO WRITE NPM INSTALL REACT-ROUTER-DOM IN CMD STARTED FROM FOLDER WHERE OUR PROJECT IS INSTALLED \n    super(props);\n    this.state = {\n      winningNumber: getRandomNumber(),\n      tickets: [],\n      remainingTickets: 5,\n      finished: false\n    };\n    this.registerTickets = registerTickets.bind(this);\n    this.removeTicket = removeTicket.bind(this);\n    this.checkTicket = checkTicket.bind(this);\n    this.reset = reset.bind(this); // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp() {\n    //в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n    const actions = {\n      registerTickets: this.registerTickets,\n      removeTicket: this.removeTicket,\n      checkTicket: this.checkTicket,\n      reset: this.reset\n    }; //here we tell to actions to be object and put it to the\n    //prop.actions in Lottery component\n\n    if (this.state.finished) {\n      return /*#__PURE__*/_jsxDEV(Final, {\n        actions: actions,\n        tickets: this.state.tickets,\n        winningNumber: this.state.winningNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Lottery, {\n      actions: actions // тук слагаме prop actions за да можем да добавяме функции които ще манипулират стейта в App \n      //и тези функции ще ги достъпваме чрез prop actions \n      ,\n      tickets: this.state.tickets,\n      remainingTickets: this.state.remainingTickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"topnav\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"active\",\n          href: \"#home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#news\",\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#contact\",\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#about\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), this.renderApp()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/lottery/lottery/src/App.js"],"names":["React","Component","Lottery","Final","About","getRandomNumber","registerTickets","removeTicket","checkTicket","reset","BrowserRouter","Route","Switch","App","constructor","props","state","winningNumber","tickets","remainingTickets","finished","bind","renderApp","actions","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,EAAgBC,KAAhB,EAAsBC,KAAtB,QAAkC,kBAAlC;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AACA,SAAQC,eAAR,EAAwBC,YAAxB,EAAqCC,WAArC,EAAiDC,KAAjD,QAA6D,kBAA7D;AACA,OAAO,oBAAP;AACA,SAAQC,aAAR,EAAsBC,KAAtB,EAA4BC,MAA5B,QAA0C,kBAA1C,C,CAA4D;;;;AAE5D,MAAMC,GAAN,SAAkBZ,SAAlB,CAA2B;AACvB;AACA;AACA;AACA;AACA;AAEFa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAC;AAClB;AACA;AACA;AACA;AACA,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAMZ,eAAe,EADvB;AAEVa,MAAAA,OAAO,EAAE,EAFC;AAGVC,MAAAA,gBAAgB,EAAS,CAHf;AAIXC,MAAAA,QAAQ,EAAW;AAJR,KAAb;AAMA,SAAKd,eAAL,GAAuBA,eAAe,CAACe,IAAhB,CAAqB,IAArB,CAAvB;AACA,SAAKd,YAAL,GAAoBA,YAAY,CAACc,IAAb,CAAkB,IAAlB,CAApB;AACA,SAAKb,WAAL,GAAmBA,WAAW,CAACa,IAAZ,CAAiB,IAAjB,CAAnB;AACA,SAAKZ,KAAL,GAAaA,KAAK,CAACY,IAAN,CAAW,IAAX,CAAb,CAfiB,CAgBjB;AACA;AACD;;AAEDC,EAAAA,SAAS,GAAE;AAAG;AACZ,UAAMC,OAAO,GAAG;AAACjB,MAAAA,eAAe,EAAG,KAAKA,eAAxB;AACEC,MAAAA,YAAY,EAAG,KAAKA,YADtB;AAEEC,MAAAA,WAAW,EAAG,KAAKA,WAFrB;AAGEC,MAAAA,KAAK,EAAE,KAAKA;AAHd,KAAhB,CADS,CAMT;AACA;;AACE,QAAI,KAAKO,KAAL,CAAWI,QAAf,EAAyB;AAEvB,0BAAO,QAAC,KAAD;AACH,QAAA,OAAO,EAAIG,OADR;AAEH,QAAA,OAAO,EAAI,KAAKP,KAAL,CAAWE,OAFnB;AAGH,QAAA,aAAa,EAAI,KAAKF,KAAL,CAAWC;AAHzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAMD;;AACJ,wBAAQ,QAAC,OAAD;AACC,MAAA,OAAO,EAAIM,OADZ,CACoB;AACnB;AAFD;AAGC,MAAA,OAAO,EAAI,KAAKP,KAAL,CAAWE,OAHvB;AAIG,MAAA,gBAAgB,EAAI,KAAKF,KAAL,CAAWG;AAJlC;AAAA;AAAA;AAAA;AAAA,YAAR;AAMA;;AAEDK,EAAAA,MAAM,GAAE;AACN,wBAGE;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,QAAT;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAG,UAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOK,KAAKF,SAAL,EAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAeD;;AApEwB;;AAwE3B,eAAeT,GAAf","sourcesContent":["import React,{Component} from 'react'\nimport './App.css';\nimport {Lottery,Final,About} from './helper/imports'\nimport {getRandomNumber} from './helper/utills'\nimport {registerTickets,removeTicket,checkTicket,reset} from './helper/actions'\nimport 'antd/dist/antd.css';\nimport {BrowserRouter,Route,Switch,} from 'react-router-dom'//this way we add router routes\n\nclass App extends Component{\n    // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n    //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n    //които ще приемат някакви параметри\n    //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n    // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n\n  constructor(props) {//from state in constructor all our components are dependant \n    //and all components are reactive because of this state \n    //it is a parent component state and all components depend on it\n    //is state is changed then all components are noticed and they will be updated\n    //FOR ROUTING WE HAVE TO WRITE NPM INSTALL REACT-ROUTER-DOM IN CMD STARTED FROM FOLDER WHERE OUR PROJECT IS INSTALLED \n    super(props);\n    this.state = {\n      winningNumber    : getRandomNumber(),\n       tickets: [],\n       remainingTickets        :5,\n      finished         : false\n    }\n    this.registerTickets = registerTickets.bind(this);\n    this.removeTicket = removeTicket.bind(this);\n    this.checkTicket = checkTicket.bind(this);\n    this.reset = reset.bind(this);\n    // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp(){  //в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n    const actions = {registerTickets : this.registerTickets, \n                      removeTicket : this.removeTicket, \n                      checkTicket : this.checkTicket,\n                      reset: this.reset\n                    }\n    //here we tell to actions to be object and put it to the\n    //prop.actions in Lottery component\n      if (this.state.finished) {\n\n        return <Final\n            actions = {actions}\n            tickets = {this.state.tickets}\n            winningNumber = {this.state.winningNumber}\n        />;\n        \n      }\n   return  <Lottery \n            actions = {actions}// тук слагаме prop actions за да можем да добавяме функции които ще манипулират стейта в App \n            //и тези функции ще ги достъпваме чрез prop actions \n            tickets = {this.state.tickets}\n              remainingTickets = {this.state.remainingTickets} \n          />\n  }\n\n  render(){\n    return (\n\n      \n      <div className ='App'>\n        <div class=\"topnav\">\n          <a class=\"active\" href=\"#home\">Home</a>\n          <a href=\"#news\">News</a>\n          <a href=\"#contact\">Contact</a>\n          <a href=\"#about\">About</a>\n        </div>\n          {this.renderApp()}\n      </div>\n      \n      );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}