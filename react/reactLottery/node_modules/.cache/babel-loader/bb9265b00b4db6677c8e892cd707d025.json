{"ast":null,"code":"//тук ще са функциите които ще ползваме в app.js  за да може чрез тях да се подифицира стейта който се пази там от\n//другите компоненти това е файл за функции\nimport { getRandomNumber } from './utills';\nexport function registerTickets() {\n  const newTicket = {\n    number: getRandomNumber(),\n    color: getRandomColor()\n  };\n  this.setState(prevState => {\n    this.state.remainingTickets.push(newTicket); //тук трябва да вържем this.state.ticket\n    // с контекста на App.js компонента\n\n    return {\n      // връщайки този обект със свойствата от state в App компонента те ще се модифицират, \n      //само трябва this да се обвърже със контекста на App.js компонента като байнднем в конструктора \n      // на App компонента ф-ята registerTicket със this \n      tickets: prevState.tickets,\n      remainingTickets: --this.prevState.remainingTickets\n    };\n  });\n}\n\nfunction getRandomColor() {}","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/lottery/lottery/src/helper/actions.js"],"names":["getRandomNumber","registerTickets","newTicket","number","color","getRandomColor","setState","prevState","state","remainingTickets","push","tickets"],"mappings":"AAAA;AACA;AACA,SAAQA,eAAR,QAA8B,UAA9B;AAEA,OAAO,SAASC,eAAT,GAA0B;AAC7B,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAGH,eAAe,EADV;AAEdI,IAAAA,KAAK,EAAGC,cAAc;AAFR,GAAlB;AAKA,OAAKC,QAAL,CAAeC,SAAD,IAAa;AACvB,SAAKC,KAAL,CAAWC,gBAAX,CAA4BC,IAA5B,CAAiCR,SAAjC,EADuB,CAExB;AACC;;AAEA,WAAO;AAAC;AACJ;AACA;AACAS,MAAAA,OAAO,EAAGJ,SAAS,CAACI,OAHjB;AAIHF,MAAAA,gBAAgB,EAAG,EAAE,KAAKF,SAAL,CAAeE;AAJjC,KAAP;AAOH,GAZD;AAeH;;AAEA,SAASJ,cAAT,GAAyB,CAEzB","sourcesContent":["//тук ще са функциите които ще ползваме в app.js  за да може чрез тях да се подифицира стейта който се пази там от\r\n//другите компоненти това е файл за функции\r\nimport {getRandomNumber} from './utills'\r\n\r\nexport function registerTickets(){\r\n    const newTicket = {\r\n        number : getRandomNumber(),\r\n        color : getRandomColor()\r\n    }\r\n\r\n    this.setState((prevState)=>{\r\n        this.state.remainingTickets.push(newTicket)\r\n       //тук трябва да вържем this.state.ticket\r\n        // с контекста на App.js компонента\r\n\r\n        return {// връщайки този обект със свойствата от state в App компонента те ще се модифицират, \r\n            //само трябва this да се обвърже със контекста на App.js компонента като байнднем в конструктора \r\n            // на App компонента ф-ята registerTicket със this \r\n            tickets : prevState.tickets,\r\n            remainingTickets : --this.prevState.remainingTickets\r\n        }\r\n\r\n    })\r\n\r\n   \r\n}\r\n\r\n function getRandomColor(){\r\n\r\n}"]},"metadata":{},"sourceType":"module"}