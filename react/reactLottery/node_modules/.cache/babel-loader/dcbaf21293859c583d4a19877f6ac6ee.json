{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel.zahariev\\\\Documents\\\\projects\\\\lottery\\\\lottery\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Lottery, Final } from './helper/imports';\nimport { getRandomNumber } from './helper/utills';\nimport { registerTickets, removeTicket, checkTicket, reset } from './helper/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n  //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n  //които ще приемат някакви параметри\n  //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n  // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningNumber: getRandomNumber(),\n      tickets: [],\n      remainingTickets: 5,\n      finished: false\n    };\n    this.registerTickets = registerTickets.bind(this);\n    this.removeTicket = removeTicket.bind(this);\n    this.checkTicket = checkTicket.bind(this);\n    this.reset = reset.bind(this); // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp() {\n    //в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n    const actions = {\n      registerTickets: this.registerTickets,\n      removeTicket: this.removeTicket,\n      checkTicket: this.checkTicket\n    }; //here we tell to actions to be object and put it to the\n    //prop.actions in Lottery component\n\n    if (this.state.finished) {\n      return /*#__PURE__*/_jsxDEV(Final, {\n        tickets: this.state.tickets,\n        winningNumber: this.state.winningNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Lottery, {\n      actions: actions // тук слагаме prop actions за да можем да добавяме функции които ще манипулират стейта в App \n      //и тези функции ще ги достъпваме чрез prop actions \n      ,\n      tickets: this.state.tickets,\n      remainingTickets: this.state.remainingTickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.renderApp()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/lottery/lottery/src/App.js"],"names":["React","Component","Lottery","Final","getRandomNumber","registerTickets","removeTicket","checkTicket","reset","App","constructor","props","state","winningNumber","tickets","remainingTickets","finished","bind","renderApp","actions","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AACA,SAAQC,eAAR,EAAwBC,YAAxB,EAAqCC,WAArC,EAAiDC,KAAjD,QAA6D,kBAA7D;;;AACA,MAAMC,GAAN,SAAkBR,SAAlB,CAA2B;AACvB;AACA;AACA;AACA;AACA;AAEFS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAMT,eAAe,EADvB;AAEVU,MAAAA,OAAO,EAAE,EAFC;AAGVC,MAAAA,gBAAgB,EAAS,CAHf;AAIXC,MAAAA,QAAQ,EAAW;AAJR,KAAb;AAMA,SAAKX,eAAL,GAAuBA,eAAe,CAACY,IAAhB,CAAqB,IAArB,CAAvB;AACA,SAAKX,YAAL,GAAoBA,YAAY,CAACW,IAAb,CAAkB,IAAlB,CAApB;AACA,SAAKV,WAAL,GAAmBA,WAAW,CAACU,IAAZ,CAAiB,IAAjB,CAAnB;AACA,SAAKT,KAAL,GAAaA,KAAK,CAACS,IAAN,CAAW,IAAX,CAAb,CAXiB,CAYjB;AACA;AACD;;AAEDC,EAAAA,SAAS,GAAE;AAAG;AACZ,UAAMC,OAAO,GAAG;AAACd,MAAAA,eAAe,EAAG,KAAKA,eAAxB;AACEC,MAAAA,YAAY,EAAG,KAAKA,YADtB;AAEEC,MAAAA,WAAW,EAAG,KAAKA;AAFrB,KAAhB,CADS,CAIT;AACA;;AACE,QAAI,KAAKK,KAAL,CAAWI,QAAf,EAAyB;AAEvB,0BAAO,QAAC,KAAD;AACH,QAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWE,OADnB;AAEH,QAAA,aAAa,EAAI,KAAKF,KAAL,CAAWC;AAFzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD;;AACJ,wBAAQ,QAAC,OAAD;AACC,MAAA,OAAO,EAAIM,OADZ,CACoB;AACnB;AAFD;AAGC,MAAA,OAAO,EAAI,KAAKP,KAAL,CAAWE,OAHvB;AAIG,MAAA,gBAAgB,EAAI,KAAKF,KAAL,CAAWG;AAJlC;AAAA;AAAA;AAAA;AAAA,YAAR;AAMA;;AAEDK,EAAAA,MAAM,GAAE;AACN,wBAEE;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,gBACK,KAAKF,SAAL;AADL;AAAA;AAAA;AAAA;AAAA,YAFF;AAQD;;AAtDwB;;AA0D3B,eAAeT,GAAf","sourcesContent":["import React,{Component} from 'react'\nimport './App.css';\nimport {Lottery,Final} from './helper/imports'\nimport {getRandomNumber} from './helper/utills'\nimport {registerTickets,removeTicket,checkTicket,reset} from './helper/actions'\nclass App extends Component{\n    // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n    //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n    //които ще приемат някакви параметри\n    //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n    // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningNumber    : getRandomNumber(),\n       tickets: [],\n       remainingTickets        :5,\n      finished         : false\n    }\n    this.registerTickets = registerTickets.bind(this);\n    this.removeTicket = removeTicket.bind(this);\n    this.checkTicket = checkTicket.bind(this);\n    this.reset = reset.bind(this);\n    // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp(){  //в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n    const actions = {registerTickets : this.registerTickets, \n                      removeTicket : this.removeTicket, \n                      checkTicket : this.checkTicket}\n    //here we tell to actions to be object and put it to the\n    //prop.actions in Lottery component\n      if (this.state.finished) {\n\n        return <Final\n            tickets = {this.state.tickets}\n            winningNumber = {this.state.winningNumber}\n        />;\n        \n      }\n   return  <Lottery \n            actions = {actions}// тук слагаме prop actions за да можем да добавяме функции които ще манипулират стейта в App \n            //и тези функции ще ги достъпваме чрез prop actions \n            tickets = {this.state.tickets}\n              remainingTickets = {this.state.remainingTickets} \n          />\n  }\n\n  render(){\n    return (\n      \n      <div className ='App'>\n          {this.renderApp()}\n      </div>\n      \n      );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}