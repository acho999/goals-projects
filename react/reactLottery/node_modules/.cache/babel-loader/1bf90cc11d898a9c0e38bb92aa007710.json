{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel.zahariev\\\\Documents\\\\projects\\\\lottery\\\\lottery\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Lottery } from './helper/imports';\nimport { getRandomNumber } from './helper/utills';\nimport { registerTickets } from './helper/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n  //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n  //които ще приемат някакви параметри\n  //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n  // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningNumber: getRandomNumber(),\n      remainingTickets: [],\n      tickets: 5,\n      finished: false\n    };\n    this.registerTickets = this.registerTickets.bind(this); // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp() {//в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Lottery, {\n        remainingTickets: this.state.remainingTickets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/lottery/lottery/src/App.js"],"names":["React","Component","Lottery","getRandomNumber","registerTickets","App","constructor","props","state","winningNumber","remainingTickets","tickets","finished","bind","renderApp","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AACA,SAAQC,eAAR,QAA8B,kBAA9B;;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACvB;AACA;AACA;AACA;AACA;AAEFK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAMN,eAAe,EADvB;AAEXO,MAAAA,gBAAgB,EAAG,EAFR;AAGXC,MAAAA,OAAO,EAAW,CAHP;AAIXC,MAAAA,QAAQ,EAAW;AAJR,KAAb;AAMA,SAAKR,eAAL,GAAuB,KAAKA,eAAL,CAAqBS,IAArB,CAA0B,IAA1B,CAAvB,CARiB,CASjB;AACA;AACD;;AAEDC,EAAAA,SAAS,GAAE,CAAG;AAEb;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBAEE;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,6BACE,QAAC,OAAD;AAEA,QAAA,gBAAgB,EAAI,KAAKP,KAAL,CAAWE;AAF/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAaD;;AAtCwB;;AA0C3B,eAAeL,GAAf","sourcesContent":["import React,{Component} from 'react'\nimport './App.css';\nimport {Lottery} from './helper/imports'\nimport {getRandomNumber} from './helper/utills'\nimport {registerTickets} from './helper/actions'\nclass App extends Component{\n    // тук в този главен компонент трябва да държим стейт който ще се ползва от другите компоненти\n    //тук ще се предостави и начина този стейт да се модифицира и от другите деца компоненти това става с функции\n    //които ще приемат някакви параметри\n    //Значи стейта който ни трябва ще се пази тук в главния компонент и той ще може да се модифицира от другите\n    // компоненти чрез функции и ще може да се подава надолу по компонентите като props\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningNumber    : getRandomNumber(),\n      remainingTickets : [],\n      tickets          :5,\n      finished         : false\n    }\n    this.registerTickets = this.registerTickets.bind(this) \n    // here we bind this function because ot need for access\n    // context of the App component in this function because there have changes in state which is in App component\n  }\n\n  renderApp(){  //в тази ф-я на база на условна конструкция ще казваме дали даден компонент ще се зарежда или не\n\n  }\n\n  render(){\n    return (\n      \n      <div className ='App'>\n        <Lottery \n        \n        remainingTickets = {this.state.remainingTickets}\n        \n        />\n        \n      </div>\n      \n      );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}