{"ast":null,"code":"//тук ще са функциите които ще ползваме в app.js  за да може чрез тях да се подифицира стейта който се пази там от\n//другите компоненти това е файл за функции\nimport { getRandomNumber, getRandomColor } from './utills';\nexport function registerTickets() {\n  const newTicket = {\n    number: getRandomNumber(),\n    color: getRandomColor()\n  };\n  this.setState(prevState => {\n    prevState.tickets.push(newTicket);\n    return {\n      // връщайки този обект със свойствата от state в App компонента те ще се модифицират, \n      //само ако имаме this то трябва да се обвърже със контекста на App.js компонента като байнднем в конструктора \n      // на App компонента ф-ята registerTicket със this \n      tickets: prevState.tickets,\n      remainingTickets: --prevState.remainingTickets\n    };\n  });\n}\nexport function checkTicket(tickets) {\n  this.setState(prevState => {\n    prevState.finished = true;\n    return {\n      finished: prevState.finished\n    };\n  });\n}\nexport function removeTicket(index) {\n  this.setState(prevState => {\n    prevState.tickets.splice(index, 1);\n    return {\n      tickets: prevState.tickets,\n      remainingTickets: ++prevState.remainingTickets\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/angel.zahariev/Documents/projects/lottery/lottery/src/helper/actions.js"],"names":["getRandomNumber","getRandomColor","registerTickets","newTicket","number","color","setState","prevState","tickets","push","remainingTickets","checkTicket","finished","removeTicket","index","splice"],"mappings":"AAAA;AACA;AACA,SAAQA,eAAR,EAAyBC,cAAzB,QAA8C,UAA9C;AAEA,OAAO,SAASC,eAAT,GAA0B;AAC7B,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAGJ,eAAe,EADV;AAEdK,IAAAA,KAAK,EAAGJ,cAAc;AAFR,GAAlB;AAKA,OAAKK,QAAL,CAAeC,SAAD,IAAa;AAEvBA,IAAAA,SAAS,CAACC,OAAV,CAAkBC,IAAlB,CAAuBN,SAAvB;AAEA,WAAO;AAAC;AACJ;AACA;AACAK,MAAAA,OAAO,EAAGD,SAAS,CAACC,OAHjB;AAIHE,MAAAA,gBAAgB,EAAG,EAAEH,SAAS,CAACG;AAJ5B,KAAP;AAOH,GAXD;AAcH;AAED,OAAO,SAASC,WAAT,CAAqBH,OAArB,EAA6B;AAEhC,OAAKF,QAAL,CAAeC,SAAD,IAAa;AAEvBA,IAAAA,SAAS,CAACK,QAAV,GAAqB,IAArB;AACA,WAAM;AACFA,MAAAA,QAAQ,EAAGL,SAAS,CAACK;AADnB,KAAN;AAKH,GARD;AAUH;AAED,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAE/B,OAAKR,QAAL,CAAeC,SAAD,IAAa;AAEvBA,IAAAA,SAAS,CAACC,OAAV,CAAkBO,MAAlB,CAAyBD,KAAzB,EAA+B,CAA/B;AAGA,WAAO;AACHN,MAAAA,OAAO,EAAED,SAAS,CAACC,OADhB;AAEHE,MAAAA,gBAAgB,EAAE,EAAEH,SAAS,CAACG;AAF3B,KAAP;AAKH,GAVD;AAYH","sourcesContent":["//тук ще са функциите които ще ползваме в app.js  за да може чрез тях да се подифицира стейта който се пази там от\r\n//другите компоненти това е файл за функции\r\nimport {getRandomNumber, getRandomColor} from './utills'\r\n\r\nexport function registerTickets(){\r\n    const newTicket = {\r\n        number : getRandomNumber(),\r\n        color : getRandomColor()\r\n    }\r\n\r\n    this.setState((prevState)=>{\r\n\r\n        prevState.tickets.push(newTicket)\r\n\r\n        return {// връщайки този обект със свойствата от state в App компонента те ще се модифицират, \r\n            //само ако имаме this то трябва да се обвърже със контекста на App.js компонента като байнднем в конструктора \r\n            // на App компонента ф-ята registerTicket със this \r\n            tickets : prevState.tickets,\r\n            remainingTickets : --prevState.remainingTickets\r\n        }\r\n\r\n    });\r\n\r\n   \r\n}\r\n\r\nexport function checkTicket(tickets){\r\n\r\n    this.setState((prevState)=>{\r\n\r\n        prevState.finished = true;\r\n        return{\r\n            finished : prevState.finished\r\n        }\r\n        \r\n\r\n    })\r\n\r\n}\r\n\r\nexport function removeTicket(index){\r\n\r\n    this.setState((prevState)=>{\r\n\r\n        prevState.tickets.splice(index,1);\r\n       \r\n\r\n        return {\r\n            tickets: prevState.tickets,\r\n            remainingTickets: ++prevState.remainingTickets,\r\n            \r\n        }\r\n    });\r\n\r\n}\r\n\r\n "]},"metadata":{},"sourceType":"module"}